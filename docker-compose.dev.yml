version: '3.8'

# Development Docker Compose Configuration
# Use: docker-compose -f docker-compose.dev.yml up

services:
  # ============================================
  # Development Application Service
  # ============================================
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nogl-landing-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN:-localhost:3000}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      db-dev:
        condition: service_healthy
    networks:
      - dev-network
    command: npm run dev

  # ============================================
  # Development Database Service
  # ============================================
  db-dev:
    image: postgres:16-alpine
    container_name: nogl-landing-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nogl_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dev-network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
