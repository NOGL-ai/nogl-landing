version: '3.8'

services:
  # ============================================
  # Application Service
  # ============================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      # Use BuildKit for better caching
      cache_from:
        - node:18-alpine
      # Pass build args for NEXT_PUBLIC_* variables (needed at build time)
      args:
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
        - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
        - NEXT_PUBLIC_APP_SUBDOMAIN=${NEXT_PUBLIC_APP_SUBDOMAIN}
        - NEXT_PUBLIC_AUTH_SUBDOMAIN=${NEXT_PUBLIC_AUTH_SUBDOMAIN}
        - NEXT_PUBLIC_GHOST_URL=${NEXT_PUBLIC_GHOST_URL}
        - NEXT_PUBLIC_GHOST_CONTENT_API_KEY=${NEXT_PUBLIC_GHOST_CONTENT_API_KEY}
        - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
        - NEXT_PUBLIC_BUILDER_API_KEY=${NEXT_PUBLIC_BUILDER_API_KEY}
        - NEXT_PUBLIC_GOOGLE_TAG_ID=${NEXT_PUBLIC_GOOGLE_TAG_ID}
    container_name: nogl-landing-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # =============================================================================
      # Core Configuration
      # =============================================================================
      - NODE_ENV=production
      
      # =============================================================================
      # Database
      # =============================================================================
      - DATABASE_URL=${DATABASE_URL}
      
      # =============================================================================
      # NextAuth Configuration
      # =============================================================================
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      
      # =============================================================================
      # App Configuration
      # =============================================================================
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - SITE_URL=${SITE_URL}
      - SITE_NAME=${SITE_NAME}
      - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
      - NEXT_PUBLIC_APP_SUBDOMAIN=${NEXT_PUBLIC_APP_SUBDOMAIN}
      - NEXT_PUBLIC_AUTH_SUBDOMAIN=${NEXT_PUBLIC_AUTH_SUBDOMAIN}
      
      # =============================================================================
      # Email Configuration
      # =============================================================================
      - EMAIL_SERVER_HOST=${EMAIL_SERVER_HOST}
      - EMAIL_SERVER_PORT=${EMAIL_SERVER_PORT}
      - EMAIL_SERVER_USER=${EMAIL_SERVER_USER}
      - EMAIL_SERVER_PASSWORD=${EMAIL_SERVER_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      
      # =============================================================================
      # Ghost CMS Configuration
      # =============================================================================
      - NEXT_PUBLIC_GHOST_URL=${NEXT_PUBLIC_GHOST_URL}
      - NEXT_PUBLIC_GHOST_CONTENT_API_KEY=${NEXT_PUBLIC_GHOST_CONTENT_API_KEY}
      - GHOST_API_URL=${GHOST_API_URL}
      - GHOST_CONTENT_API_KEY=${GHOST_CONTENT_API_KEY}
      
      # =============================================================================
      # Google OAuth
      # =============================================================================
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # =============================================================================
      # Payment Processing (Stripe)
      # =============================================================================
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      
      # =============================================================================
      # Builder.io
      # =============================================================================
      - NEXT_PUBLIC_BUILDER_API_KEY=${NEXT_PUBLIC_BUILDER_API_KEY}
      
      # =============================================================================
      # Analytics
      # =============================================================================
      - NEXT_PUBLIC_GOOGLE_TAG_ID=${NEXT_PUBLIC_GOOGLE_TAG_ID}
      
      # =============================================================================
      # Optional Services (uncomment when needed)
      # =============================================================================
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
      # - UPLOADTHING_SECRET=${UPLOADTHING_SECRET}
      # - UPLOADTHING_APP_ID=${UPLOADTHING_APP_ID}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    # Health check temporarily disabled - uncomment when health endpoint is verified
    # healthcheck:
    #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # ============================================
  # PostgreSQL Database Service
  # ============================================
  db:
    image: postgres:16-alpine
    container_name: nogl-landing-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-nogl_db}
    ports:
      - "5432:5432"
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
      # Optional: Add initialization scripts
      # - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ============================================
  # Optional: Redis for Caching/Sessions
  # ============================================
  # redis:
  #   image: redis:7-alpine
  #   container_name: nogl-landing-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  # redis_data:
  #   driver: local
